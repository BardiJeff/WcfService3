//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.SRGeo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pays", Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    [System.SerializableAttribute()]
    public partial class Pays : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NbHabitantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Capitale {
            get {
                return this.CapitaleField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitaleField, value) != true)) {
                    this.CapitaleField = value;
                    this.RaisePropertyChanged("Capitale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NbHabitants {
            get {
                return this.NbHabitantsField;
            }
            set {
                if ((this.NbHabitantsField.Equals(value) != true)) {
                    this.NbHabitantsField = value;
                    this.RaisePropertyChanged("NbHabitants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SRGeo.IGeo")]
    public interface IGeo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeo/GetInfosPays", ReplyAction="http://tempuri.org/IGeo/GetInfosPaysResponse")]
        Client.SRGeo.Pays GetInfosPays(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeo/GetInfosPays", ReplyAction="http://tempuri.org/IGeo/GetInfosPaysResponse")]
        System.Threading.Tasks.Task<Client.SRGeo.Pays> GetInfosPaysAsync(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeo/GetNomsPays", ReplyAction="http://tempuri.org/IGeo/GetNomsPaysResponse")]
        System.Collections.Generic.List<string> GetNomsPays();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeo/GetNomsPays", ReplyAction="http://tempuri.org/IGeo/GetNomsPaysResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetNomsPaysAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGeoChannel : Client.SRGeo.IGeo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeoClient : System.ServiceModel.ClientBase<Client.SRGeo.IGeo>, Client.SRGeo.IGeo {
        
        public GeoClient() {
        }
        
        public GeoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GeoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.SRGeo.Pays GetInfosPays(string nom) {
            return base.Channel.GetInfosPays(nom);
        }
        
        public System.Threading.Tasks.Task<Client.SRGeo.Pays> GetInfosPaysAsync(string nom) {
            return base.Channel.GetInfosPaysAsync(nom);
        }
        
        public System.Collections.Generic.List<string> GetNomsPays() {
            return base.Channel.GetNomsPays();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetNomsPaysAsync() {
            return base.Channel.GetNomsPaysAsync();
        }
    }
}
